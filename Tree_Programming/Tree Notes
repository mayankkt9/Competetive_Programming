Inputs
[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]
[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]

Leetcode All easy over 
Tree Notes 


It is very obvious that a tree problem is likely to be solved by recursion. The two components above are actually examining interviewees' understanding to the two key points of recursion:
passing info downwards -- by arguments
passing info upwards -- by return value

Problem solving in trees (Majority of the problems can be solved using this approach)
  - Decide which traversal to use among BFS, Preorder, PostOrder, Inorder
  - If you chose BFS, then you are good to go, and this area is not complicated
  - If you choose PreOrder or PostOrder, this is all about what do you need to send down or up, to come up with a solution for this approach.





Traversal Questions
Vertical Order Traversal
Boundary traversal (Nice question)

Preorder Questions
Validate BST (Sending data downwards)

Postorder Questions
Largest BST in Btree (Very Nice postorder question, Good base, Sending data upwards)

Height Traversal Question (Traveling from root to bottom)
Inorder Successor

BFS Traversal 
Populating next right pointer

Construct Questions
654 Maximum Binary Tree
1008 Construct Binary tree from Preorder

Follow this order for some questions
Sorted Array to BST 
Unique Binary Search tree ii (Still needs practice)



Iterative Traversal Done
  - Preorder Traversal
  - Postorder Traversal
  - Inorder Traversal

Nice Approach
Distribute Coins in Binary Tree

Same question or learning

This question helped me understand this concept - If I want to partition the tree removing one edge, and calculate all possible sum of two trees - We just need to know how to calculate all subtree sum. 
Maximum Product of Splitted Binary Tree
Equal Tree Partition
